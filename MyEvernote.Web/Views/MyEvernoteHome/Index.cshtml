@using MyEvernote.EntitiesLayer;
@using MyEvernote.Web.Models;
@using MyEvernote.Web.ViewModels;
@model ViewModelEach

@{
    ViewBag.Title = "index";
}
<!-- Page Content -->

@{
    User currentUser = null;
    if (CurrentCookieTester.GetCurrentToken(CookieKeys.signedUserToken) != null)
    {
        currentUser = CurrentCookieTester.GetCurrentUser(CookieKeys.signedUserToken);
    }
}


<div class="col-lg-3">
    @Html.Partial("_PartialCategories")
</div>

<!-- /.col-lg-3 -->

<div class="col-lg-9">

    <div id="carouselExampleIndicators" class="carousel slide my-4" data-ride="carousel">
        <ol class="carousel-indicators">
            <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
            <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
            <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
            <li data-target="#carouselExampleIndicators" data-slide-to="3"></li>
            <li data-target="#carouselExampleIndicators" data-slide-to="4"></li>
            <li data-target="#carouselExampleIndicators" data-slide-to="5"></li>
        </ol>
        <div class="carousel-inner" role="listbox">
            <div class="carousel-item active">
                <img class="d-block img-fluid" style="width: 100% !important; height: 350px !important;" 
                     src="@Model.DirectoryHelper.ImagesProjectGeneralDir@Model.ImageHelper.sl1" alt="First slide">
            </div>
            <div class="carousel-item">
                <img class="d-block img-fluid" style="width: 100% !important; height: 350px !important;" 
                     src="@Model.DirectoryHelper.ImagesProjectGeneralDir@Model.ImageHelper.sl2" alt="Second slide">
            </div>
            <div class="carousel-item">
                <img class="d-block img-fluid" style="width: 100% !important; height: 350px !important;" 
                     src="@Model.DirectoryHelper.ImagesProjectGeneralDir@Model.ImageHelper.sl3" alt="Third slide">
            </div>
            <div class="carousel-item">
                <img class="d-block img-fluid" style="width: 100% !important; height: 350px !important;" 
                     src="@Model.DirectoryHelper.ImagesProjectGeneralDir@Model.ImageHelper.sl4" alt="Third slide">
            </div>
            <div class="carousel-item">
                <img class="d-block img-fluid" style="width: 100% !important; height: 350px !important;" 
                     src="@Model.DirectoryHelper.ImagesProjectGeneralDir@Model.ImageHelper.sl5" alt="Third slide">
            </div>
            <div class="carousel-item">
                <img class="d-block img-fluid" style="width: 100% !important; height: 350px !important;" 
                     src="@Model.DirectoryHelper.ImagesProjectGeneralDir@Model.ImageHelper.sl6" alt="Third slide">
            </div>
        </div>
        <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>

    <div class="row">

        @if (Model != null)
        {
            foreach (Note note in Model.Notes)
            {
                <div class="col-lg-4 col-md-6 mb-4">
                    <div class="card h-100" data-card-posted="@note.Id">
                        <img class="card-img-top" style="width: 100% !important; height: 200px !important;" 
                             src="@(string.IsNullOrEmpty(note.ImageCap)?Model.DirectoryHelper.NoteImagesDir+Model.ImageHelper.PostCaptionPhoto:Model.DirectoryHelper.NoteImagesDir+note.ImageCap)" alt="@note.NoteTitle">
                        <div class="card-body">
                            <div class="text-right">

                                @if (note.User.IsAdmin == true)
                                {
                                    <span class="fas-shield-username"><b>@note.User.Username</b></span>
                                    <i class="fas fa-user-shield"></i>
                                }
                                else
                                {
                                    <span>@note.User.Username</span>
                                    <i class="fas fa-user-alt"></i>
                                }
                                <br />
                                <small>@note.CreatedOn.ToString("dd/MM/yyyy  hh:mm")</small>
                            </div>
                            <h4 class="card-title text-primary text-center">
                                @note.NoteTitle
                            </h4>
                            @if (string.IsNullOrEmpty(note.Text) == false)
                            {
                                if (note.Text.Length > 120)
                                {
                                    <p class="card-text">
                                        @(note.Text.Substring(0, 120) + "...")
                                    </p>
                                    <div>
                                        <button type="button" data-toggle="modal" data-target="#commentsModal" data-note-title="@note.NoteTitle" data-note-id="@note.Id" class="btn btn-sm btn-outline-info">Davamını oxu <i class="fas fa-expand-arrows-alt"></i></button>
                                    </div>
                                }
                                else
                                {
                                    <p class="card-text">
                                        @note.Text
                                    </p>
                                }
                            }

                        </div>
                        <div class="card-footer">
                            @if (currentUser != null)
                            {
                                <div class="d-inline-block likePosts likeParent" data-clicked-parentid="@note.Id">
                                    <button class="btn btn-default btn-sm parentLikeStatus" data-process-noteid="@note.Id" data-likedalready="false">
                                        <i class="far fa-heart likedIcon"></i>&nbsp;
                                        <span class="likedCountDynamic">@note.LikeCount</span>
                                    </button>
                                </div>
                            }
                            else
                            {
                                <div class="d-inline-block likePosts likeParent">
                                    <button class="btn btn-default disabled btn-sm" disabled data-likedalready="false">
                                        <i class="far fa-heart"></i>&nbsp;
                                        <span class="likedCountDynamic">@note.LikeCount</span>
                                    </button>
                                </div>
                            }

                            <div class="d-inline-block float-right commentPosts">
                                <button type="button" data-toggle="modal" data-target="#commentsModal" data-note-title="@note.NoteTitle" data-note-id="@note.Id" class="btn btn-default btn-sm">
                                    <i class="far fa-comment-alt"></i> <span>Yorumlar</span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }


        }
        else
        {
            <div class="col-12">
                <h3 class="text-center">
                    Hec Bir Post Tapilmadi
                </h3>
            </div>
        }




    </div>


</div>


@section footerSection{
    @Html.Partial("_PartialFooter")
}
<!-- /.col-lg-9 -->
<!-- /.row -->

@BootstrapHelper.ModalPopup("commentsModal");

<script>
    $(function () {

        let listIds = [];
        let loopCount = $("div[data-card-posted]").length;
        let postes = $("div[data-card-posted]");

        for (var i = 0; i < loopCount; i++) {
            let currentTag = $(postes[i]);
            let currentNoteId = currentTag.data("card-posted");
            listIds.push(currentNoteId);
        }


        $.ajax({
            method: "POST",
            url: "/Like/GetLikedIds",
            data: { ids: listIds }
        }).done(function (data) {

            if (data.result !== (undefined || null) && data.result.length > 0) {
                for (let i = 0; i < data.result.length; i++) {
                    let id = data.result[i];
                    let likedItem = $("div[data-card-posted=" + id + "]");
                    let likedIcon = likedItem.find(".likedIcon");

                    let likedParentStatus = likedItem.find(".parentLikeStatus");

                    let likeBtnParent = likedItem.find(".likeParent");

                    likeBtnParent.removeClass("likePosts");
                    likeBtnParent.addClass("likedAlready");
                    likedIcon.removeClass("far");
                    likedIcon.addClass("fas");

                    likedParentStatus.data("likedalready", "true");

                }
            }

        }).fail(function () {

        });

        // Like Click Bolmesi
        $(".parentLikeStatus").click(function (e) {

            let clickedBtn = $(this);
            //let clickedParent = $("div[data-clicked-parentid=" + clickedBtn.data("process-noteid") + "]");
            
            let likeCountSpan = clickedBtn.find(".likedCountDynamic");
            let clickedIcon = clickedBtn.find("i");
            let insertProcess = clickedBtn.data("likedalready");
            let likedNoteId = clickedBtn.data("process-noteid");


            //if (clickedBtn.data("likedalready") == false) {

            //insertProcess = true;

            $.ajax({
                method: "POST",
                url: "/Like/SetLikeProcess/" + likedNoteId,
                data: { isInsert: !insertProcess }
            }).done(function (data) {

                likeCountSpan.text(data.likeCount);
                clickedBtn.data("likedalready", data.likeStatus);

                switch (data.result) {
                    case 1:
                        if (data.likeStatus) {
                            clickedIcon.removeClass("far");
                            clickedIcon.addClass("fas");
                            clickedBtn.parent().removeClass("likePosts");
                            clickedBtn.parent().removeClass("likedAlready");
                            clickedBtn.parent().addClass("likedAlready");
                        } else {
                            clickedIcon.removeClass("fas");
                            clickedIcon.addClass("far");
                            clickedBtn.parent().removeClass("likedAlready");
                            clickedBtn.parent().removeClass("likePosts");
                            clickedBtn.parent().addClass("likePosts");
                        }
                        break;
                    case 0:
                        alert(data.message);
                        break;
                    default:
                }

            }).fail(function (data) {
                alert("Server Ile Baglanti Qopmusdur. Sehifeni Yenileyin.");
                setTimeout(function () {
                    window.Location.url = "/MyEvernoteHome/Index";
                }, 2500);
            });

        });

    });
</script>