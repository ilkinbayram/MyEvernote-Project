@using MyEvernote.EntitiesLayer
@using MyEvernote.BussinesLayer.Managers
@using MyEvernote.BussinesLayer.Tools

@model MyEvernote.EntitiesLayer.Note

@{
    ViewBag.Title = "Edit";
}

@{
    CategoryManager catMan = new CategoryManager();
    List<Category> catList = catMan.List(x => x.IsDeleted == false);
    DefaultDirectoryHelper DirectoryHelper = new DefaultDirectoryHelper();
    DefaultImageHelper ImageHelper = new DefaultImageHelper();
}
<div class="col-12">
    @using (Html.BeginForm("Edit","Note",FormMethod.Post,new { enctype = "multipart/form-data"}))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4 class="mt-3">Post Duzelis Bolmesi</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                <label for="notePhoto" class="col-md-2">Post Sekli</label>
                <div class="col-md-10">
                    @if (Model.ImageCap == null)
                    {
                        <img src="@DirectoryHelper.NoteImagesDir@ImageHelper.PostCaptionPhoto" class="rounded" style="border-radius: 8px; width: 300px; height: 190px;" alt="Foto Movcud Deyil" />
                    }
                    else
                    {
                        <img src="@DirectoryHelper.NoteImagesDir@Model.ImageCap" class="rounded" style="border-radius: 8px; width: 300px; height: 190px;" alt="Foto Movcud Deyil" />
                    }

                </div>
            </div>
            <br />
            <div class="form-group">
                <div class="col-md-10">
                    <input type="file" class="form-control form-control-file" id="notePhoto" name="notePhoto" value="" />
                    <div class="mt-3">
                        <small class="mt-3">
                            <i class="fas fa-info-circle"></i> <i>Lutfen <b>jpg</b>, <b>jpeg</b> ve ya <b>png</b> formatinda fayllar daxil edin.</i>
                        </small>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label for="notePhoto" class="col-md-2">Postun Kateqoriyasi</label>
                <div class="col-md-10">
                    <select class="custom-select" name="categoryId">
                        <option>
                            Kategoriya Sec
                        </option>
                        @foreach (Category ctg in catList)
                        {
                            <option value="@ctg.Id">
                                @ctg.CategoryName
                            </option>
                        }
                    </select>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NoteTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NoteTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NoteTitle, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Text,5,50, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsDraft, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsDraft)
                        @Html.ValidationMessageFor(model => model.IsDraft, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LikeCount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LikeCount, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    @Html.ValidationMessageFor(model => model.LikeCount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Qeyd Et" class="btn btn-outline-success" /> |
                    <a href="/Note/Index" class="btn btn-outline-dark">Geri Don</a>
                </div>
            </div>
        </div>
    }
</div>

